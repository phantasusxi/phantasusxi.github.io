{"version":3,"sources":["settings/style.js","components/Header.js","components/Nav.js","components/Wave.js","App.js","serviceWorker.js","index.js"],"names":["colors","type","root","Wrapper","styledComponents","header","_templateObject","Header","props","react_default","a","createElement","title","subtitle","nav","Nav_templateObject","Nav","Nav_Wrapper","href","github","target","rel","twitter","Animation","keyframes","Wave_templateObject","footer","_templateObject2","Wave","Wave_Wrapper","version","xmlns","viewBox","preserveAspectRatio","d","fill","Style","createGlobalStyle","App_templateObject","main","App_templateObject2","App","Fragment","Helmet_default","concat","pkg","config","description","content","name","homepage","App_Wrapper","components_Header","components_Nav","components_Wave","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"y+BAEaA,EACL,UADKA,EAEL,UAFKA,EAGA,UAHAA,EAIA,OAKAC,EACL,uHADKA,EAEL,CACJC,KAAM,s3BCNV,IAAMC,EAAUC,IAAiBC,OAApBC,IAEFN,EAGaA,EACXA,EAiBWA,EACXA,EAkBeA,EACCA,EACLA,GAiBTO,EATA,SAACC,GAAD,OACbC,EAAAC,EAAAC,cAACR,EAAD,KACEM,EAAAC,EAAAC,cAAA,UAAMH,EAAMI,OACZH,EAAAC,EAAAC,cAAA,UAAMH,EAAMK,o2BCvDhB,IAAMV,EAAUC,IAAiBU,IAApBC,IAWAf,EAaWA,EAkBAA,GA+BTgB,EAjBH,SAACR,GACX,OACEC,EAAAC,EAAAC,cAACM,EAAD,KACER,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,KAAGO,KAAM,sBAAwBV,EAAMW,OAAQP,MAAM,SAASQ,OAAO,SAASC,IAAI,uBAAlF,WAEFZ,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,KAAGO,KAAM,uBAAyBV,EAAMc,QAASV,MAAM,UAAUQ,OAAO,SAASC,IAAI,uBAArF,k6CChEV,IAAME,EAAYC,YAAHC,KAcTtB,EAAUC,IAAiBsB,OAApBC,IAGA3B,EAOIuB,GAwBFK,EAbF,SAACpB,GAAD,OACXC,EAAAC,EAAAC,cAACkB,EAAD,KACEpB,EAAAC,EAAAC,cAAA,OAAKmB,QAAQ,MACbC,MAAM,6BACNC,QAAQ,eAAeC,oBAAoB,QACzCxB,EAAAC,EAAAC,cAAA,QAAMuB,EAAE,+TAA+TC,KAAK,yyBClClV,IAAMC,EAAQC,YAAHC,IAIMrC,EAAUC,KAwBRD,GAKbE,EAAUC,IAAiBmC,KAApBC,IAESxC,EACqBA,EAAmBA,EAIvCA,GAyBRyC,EAhBH,kBAAOhC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAgC,SAAA,KACjBjC,EAAAC,EAAAC,cAACgC,EAAAjC,EAAD,KACED,EAAAC,EAAAC,cAAA,gBAAAiC,OAAWC,EAAIC,OAAOlC,MAAtB,YAAAgC,OAAiCC,EAAIC,OAAOC,cAC5CtC,EAAAC,EAAAC,cAAA,QAAMqC,QAAO,GAAAJ,OAAK5C,GAAeiD,KAAK,gBACtCxC,EAAAC,EAAAC,cAAA,QAAMU,IAAI,YAAYH,KAAI,GAAA0B,OAAKC,EAAIK,aAErCzC,EAAAC,EAAAC,cAACyB,EAAD,MACA3B,EAAAC,EAAAC,cAACwC,EAAD,KACE1C,EAAAC,EAAAC,cAACyC,EAAD,CAAQxC,MAAM,eAAeC,SAAQ,GAAA+B,OAAKC,EAAIC,OAAOC,eACrDtC,EAAAC,EAAAC,cAAC0C,EAAD,CAAKlC,OAAO,cAAcG,QAAQ,gBAClCb,EAAAC,EAAAC,cAAC2C,EAAD,SC7DgBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCTNC,IAASC,OAAOpD,EAAAC,EAAAC,cAACmD,EAAD,MAASC,SAASC,eAAe,SDwH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.e12b249a.chunk.js","sourcesContent":["// ..........................\n\nexport const colors = {\n  main: '#8937df',\n  dark: '#592088',\n  selection: '#8e44ad',\n  secondary: '#fff',\n}\n\n// ..........................\n\nexport const type = {\n  family: `'Avenir Next', -apple-system, system-ui, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif`,\n  size: {\n    root: '16px'\n  }\n}\n\n// ..........................","// ..........................\n\nimport React from 'react'\nimport styledComponents from 'styled-components'\nimport { colors } from '../settings/style'\n\n// ..........................\n\nconst Wrapper = styledComponents.header`\n\n  color: ${colors.secondary}\n\n  h1::selection, h2::selection {\n    background-color: ${colors.selection}\n    color: ${colors.secondary}\n  }\n\n  h1 {\n    font-weight: 700\n    letter-spacing: 2px\n    text-align: center\n    margin-bottom: 10px\n    font-size: 20px\n  }\n\n  h2 {\n    font-weight: 400\n    letter-spacing: 2px\n    text-align: center\n    margin-bottom: 20px\n    font-size: 18px\n    background-color: ${colors.dark}\n    color: ${colors.secondary}\n    display: inline-block\n    border-radius: 4px\n    padding: 4px 8px\n    position: relative\n  }\n\n  h2::before {\n    content: \"\";\n  }\n\n  h2::before {\n    width: 12px\n    height: 12px\n    position: absolute\n    bottom: -5px\n    right: 50%\n    margin-right: -6px\n    border-top: 1px solid ${colors.dark}\n    border-left: 1px solid ${colors.dark}\n    background-color: ${colors.dark}\n    transform: rotate(45deg)\n  }\n\n`\n\n// ..........................\n\nconst Header = (props)  => (\n  <Wrapper>\n    <h1>{ props.title }</h1>\n    <h2>{ props.subtitle }</h2>\n  </Wrapper>\n)\n\n// ..........................\n\nexport default Header\n\n// ..........................","// ..........................\n\nimport React from 'react'\nimport styledComponents from 'styled-components'\nimport { colors } from '../settings/style'\n\n// ..........................\n\nconst Wrapper = styledComponents.nav`\n\n  text-align: center\n  width: 100%\n\n  li {\n    display: inline-block\n  }\n\n  a {\n    display: inline-block\n    color: ${colors.secondary}\n    margin: 15px\n    padding-bottom: 2px\n    letter-spacing: 2px\n    position: relative\n    opacity: 0.5\n    transition: all 0.25s ease\n    text-decoration: none\n    text-transform: lowercase\n    font-size: 14px\n  }\n\n  a::selection {\n    background-color: ${colors.selection}\n  }\n\n  a:hover {\n    opacity: 1\n  }\n\n  a:hover:before {\n    visibility: visible\n    transform: scaleX(1)\n  }\n\n  a:before {\n    position: absolute\n    width: 100%\n    height: 1px\n    bottom: -5px\n    left: 0\n    background-color: ${colors.secondary}\n    visibility: hidden\n    transition: all 0.25s ease\n    transform: scaleX(0)\n  }\n\n  a:before {\n    content: '';\n  }\n\n`\n\n// ..........................\n\nconst Nav = (props) => {\n  return (\n    <Wrapper>\n      <ul>\n        <li>\n          <a href={'https://github.com/' + props.github} title='Github' target='_blank' rel='noopener noreferrer'>Github</a>\n        </li>\n        <li>\n          <a href={'https://twitter.com/' + props.twitter} title='Twitter' target='_blank' rel='noopener noreferrer'>Twitter</a>\n        </li>\n      </ul>\n    </Wrapper>\n  )\n}\n\n// ..........................\n\nexport default Nav\n\n// ..........................","// ..........................\n\nimport React from 'react'\nimport styledComponents, { keyframes } from 'styled-components'\nimport { colors } from '../settings/style'\n\n// ..........................\n\nconst Animation = keyframes`\n\n  0% {\n    d: path(\"M826.337463,25.5396311 C670.970254,58.655965 603.696181,68.7870267 447.802481,35.1443383 C293.342778,1.81111414 137.33377,1.81111414 0,1.81111414 L0,150 L1920,150 L1920,1.81111414 C1739.53523,-16.6853983 1679.86404,73.1607868 1389.7826,37.4859505 C1099.70117,1.81111414 981.704672,-7.57670281 826.337463,25.5396311 Z\")\n  }\n  50% {\n    d: path(\"M655.558582,28.4898877 C500.191373,61.6062216 422.833785,83.5422763 266.940085,49.8995879 C112.480383,16.5663637 84.0992497,8.02840272 0,44.7243294 L0,150.727527 L1920,150.727527 L1920,49.8995879 C1580.91676,-34.8808285 1438.10804,73.6768193 1148.0266,38.0019829 C857.945166,2.32714659 810.925791,-4.62644617 655.558582,28.4898877 Z\")\n  }\n  to {\n    d: path(\"M842.322034,38.0019829 C686.954825,71.1183168 623.386282,53.08497 467.492582,19.4422816 C313.032879,-13.8909426 84.0992497,8.02840272 0,44.7243294 L0,150.727527 L1920,150.727527 L1920,76.8685643 C1512.23604,-35.3595639 1568.70222,67.4289432 1278.62078,31.7541069 C988.539347,-3.92072949 997.689243,4.88564905 842.322034,38.0019829 Z\")\n  }\n\n`\n\nconst Wrapper = styledComponents.footer`\n\n  svg {\n    color: ${colors.secondary}\n    position: fixed\n    bottom: 16px\n    left: 0\n  }\n\n  path {\n    animation: ${Animation} 10s linear infinite alternate\n  }\n\n  @media (max-width: 768px) {\n    display: none\n  }\n\n`\n\n// ..........................\n\nconst Wave = (props) => (\n  <Wrapper>\n    <svg version=\"1.1\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 1440 100\" preserveAspectRatio=\"none\">\n      <path d=\"M826.337463,25.5396311 C670.970254,58.655965 603.696181,68.7870267 447.802481,35.1443383 C293.342778,1.81111414 137.33377,1.81111414 0,1.81111414 L0,150 L1920,150 L1920,1.81111414 C1739.53523,-16.6853983 1679.86404,73.1607868 1389.7826,37.4859505 C1099.70117,1.81111414 981.704672,-7.57670281 826.337463,25.5396311 Z\" fill=\"currentColor\">\n      </path>\n    </svg>\n  </Wrapper>\n)\n\n// ..........................\n\nexport default Wave\n\n// ..........................","// ..........................\n\nimport React from 'react'\nimport Helmet from 'react-helmet'\nimport styledComponents, { createGlobalStyle } from 'styled-components'\n\nimport Header from './components/Header'\nimport Nav from './components/Nav'\nimport Wave from './components/Wave'\nimport { colors, type } from './settings/style'\nimport pkg from '../package.json'\n\n// ..........................\n\nconst Style = createGlobalStyle`\n\n  html {\n    box-sizing: border-box\n    font-size: ${type.size.root}\n  }\n\n  *, *:before, *:after {\n    box-sizing: inherit\n  }\n\n  body, h1, h2, h3, h4, h5, h6, p, ol, ul {\n    margin: 0\n    padding: 0\n    font-weight: normal\n  }\n\n  ol, ul {\n    list-style: none\n  }\n\n  img {\n    max-width: 100%\n    height: auto\n  }\n\n  body {\n    -webkit-font-smoothing: antialiased\n    font-family: ${type.family}\n  }\n\n`\n\nconst Wrapper = styledComponents.main`\n\n  background-color: ${colors.main}\n  background: linear-gradient(to bottom, ${colors.main} 0%, ${colors.dark} 100%);\n\n  text-align: center\n  min-height: 100vh\n  border: 24px solid ${colors.secondary}\n  display: flex\n  flex-direction: column\n  justify-content: center\n\n`\n\n// ..........................\n\nconst App = () => (<>\n  <Helmet>\n    <title>{`${pkg.config.title} â€“ ${pkg.config.description}`}</title>\n    <meta content={`${colors.main}`} name=\"theme-color\" />\n    <link rel=\"canonical\" href={`${pkg.homepage}`} />\n  </Helmet>\n  <Style />\n  <Wrapper>\n    <Header title=\"@phantasusXI\" subtitle={`${pkg.config.description}`} />\n    <Nav github=\"phantasusXI\" twitter=\"phantasusXI\" />\n    <Wave />\n  </Wrapper>\n</>)\n\n// ..........................\n\nexport default App\n\n// ..........................","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// ..........................\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\n// ..........................\n\nReactDOM.render(<App />, document.getElementById('root'))\nserviceWorker.unregister()\n\n// .........................."],"sourceRoot":""}